/*
 * generated by Xtext
 */
package de.jpaw.bonaparte.jpa.dsl.formatting;

import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;

import de.jpaw.bonaparte.jpa.dsl.services.BDDLGrammarAccess;

/**
 * This class contains custom formatting description.
 *
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 */
public class BDDLFormatter extends AbstractDeclarativeFormatter {

    @Override
    protected void configureFormatting(FormattingConfig c) {
        BDDLGrammarAccess grammar = (BDDLGrammarAccess) getGrammarAccess();

        c.setAutoLinewrap(128);

        // semicolon formatting
        for (Keyword semicolon : grammar.findKeywords(";")) {
                c.setNoSpace().before(semicolon);
                c.setLinewrap().after(semicolon);
        }

        // parenthesis formatting
        for (Pair<Keyword, Keyword> pair : grammar.findKeywordPairs("(", ")")) {
                c.setNoSpace().before(pair.getFirst());
                c.setNoSpace().after(pair.getFirst());
                c.setNoSpace().before(pair.getSecond());
        }
        // comma formatting
        for (Keyword comma : grammar.findKeywords(",")) {
                c.setNoSpace().before(comma);
        }
        // curly brackets
        for (Keyword leftCurlyBracket : grammar.findKeywords("{")) {
                c.setIndentationIncrement().after(leftCurlyBracket);
                c.setLinewrap(1,1,1).after(leftCurlyBracket);
        }
        for (Keyword rightCurlyBracket : grammar.findKeywords("}")) {
                c.setIndentationDecrement().before(rightCurlyBracket);
                c.setLinewrap(1,1,1).before(rightCurlyBracket);
                c.setLinewrap(1,1,2).after (rightCurlyBracket);
        }

        c.setLinewrap(0, 1, 2).before(((BDDLGrammarAccess)getGrammarAccess()).getSL_COMMENTRule());
        c.setLinewrap(0, 1, 2).before(((BDDLGrammarAccess)getGrammarAccess()).getML_COMMENTRule());
        c.setLinewrap(0, 1, 1).after (((BDDLGrammarAccess)getGrammarAccess()).getML_COMMENTRule());
    }
}

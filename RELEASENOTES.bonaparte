New features and bug fixes in Bonaparte / Persistence DSL

1.5.6
- Dependency changes: reference xtend 2.4.2 (was 2.4.1), reference tycho 0.18 (was 0.15)
- Improvement: autodetect if running from maven or within Eclipse (for filtering of input files)
- BDDL: New feature: support @OneToOne, @OneToMany and @ElementCollection
- BDDL: New feature: allow to specific historytablename (if autogenerated tablename is too long to deploy to Oracle DB)
- BDDL: accept @Generator(noMapper) at package level


1.5.7
- BDDL: Bugfix: tables with inheritance caused incorrect views to be created
- BON: New Feature: folding composer (requires upgrade of bonaparte-java as well)
- BON: New feature: provide methods to retrieve field properties and class properties at runtime through static class methods
- BON: New feature: by default create getters/setters for "toFirstUpper" as well as Java-Bean-Name complying names (latter was not done before).
            Allow to fall back to old behaviour through "noJavaBeanNames" (at package or class level). Allow to specify "onlyBeanNames" as well,
            and also "JavaBeanNames" (default behaviour, to override package defaults at class level)
- BON: New feature: can now generate annotations on class and field level for "properties", if specified so at the package level
- BDDL: New feature: create @UniqueConstraint information from "index unique" specifications
- BDDL: New feature: Support for MS SQL server
- BDDL: bugfix: PK getter / setters used incorrect data type when the field was derived from a ref


1.5.8
- BDDL: New feature: "unroll" property allows converting Lists into single fields in the entity
- BDDL: new feature: simple @Embeddable objects
- BDDL: Improvement: validate column names against ANSI SQL reserved words (error) and Oracle reserved words (warning)
- BON: Improvement: generate @AnyXmlElement annotations for generic types and interfaces. Generate XmlAdapters at package level for ByteArray and JodaTime types
- BON: Allow definition of "return type", for classes which correspond to some type of request (will require an upgrade to bonaparte-java)
- BDDL: New feature: create a mergeFrom(src) method for entities (requires parallel upgrade of persistence-java)

1.5.9
- BDDL: New feature: provide KeyClass, TrackingClass, DataClass by annotation
- BDDL: bugfix: correct creation of NOT NULL for embeddables

1.6.0
- BDDL: Improvement: grammar: unique keyword no longer possible where it makes no sense
- BDDL: bugfix: fix list of columns suggested / validated for @OneToMany (must be of target object, not of current entity) 
- BDDL: (c) bugfix: remove plausis about sizes of PKs for @OneToMany and @ManyToOne - more flexible structre can and do occur
- BDDL: (c) bugfix: suppress output of null if no row comment exists for DDL
- BDDL: (d) bugfix: output for natural key entities via embeddable was incorrect, fixed now
- BDDL: (e) new feature: allow to define composite primary keys via IdClass
- BON: (f): bugfix / workaround: capture some NPEs when classes inherit from other classes which are not in open projects in Eclipse
- BON: (f) extension: allow to specify pk for classes (for Natural Key)
- BDDL: (f) bugfix: allow to use @ManyToOne with natural key classes

1.6.1
- BON: (a) add method return get$pk() key class
- BON: (a) add method copyAs(subtype)

1.6.2
- BON: (a) generate code to provide full metadata to serialization methods in bonaparte-java for all but the Java primitives
- BON: (a) bugfix: workaround NPE in Eclipse if referenced bon files are in projects which are not open
- BDDL: (b) bugfix: workaround NPE in Eclipse if referenced bon files are in projects which are not open
- BON: (c) add directive noAllFieldsConstructor for class definition to allow for classes with more than 255 fields

1.6.3
- BDDL: (a) bugfix: do not create nullable=false for elements of unrolled lists if the lower bound is strictly less than the upper bound
- BDDL: (a) bugfix: create proper conversions in geter/setter of JPA entity class for enums, if one token is the empty string (which should be mapped to null on the DB for optimized indexes)
- BON: (e) New feature: create a constructor with just the required fields as parameters.

...
1.7.0
- BON: extension: allow to freeze objects

1.7.2
- BON: upgrade from Xtend 2.4.3 to 2.5.0
- BON: enum defaults
- BON: metadata is now public
- BDDL: add property SQLdefault

1.7.3
- BON / BDDL: improvement: generate @SuppressWarnings("all")
- BDDL: skip ref columns from default mappers
- BDDL: generate also setters for JPA child objects

1.7.4
- BON: (a) extension: Allow to specify two references for class refs, for example to specify input and output types.
- BON: (b) upgrade Xtend to 2.5.1
- BON: (c) improvement: additional plausi, the second reference must be a subclass of the first
- BDDL: (d) bugfix: ElementCollection in conjunction with Embeddables did not work.
- BDDL: (e) bugfix: ElementCollection in conjunction with Embeddables still did not work.
- BON: (f) new feature: orderedBy(field list) implemented "Comparable"
- BDDL: (g) bugfix: ElementCollection in conjunction with Embeddables when using Maps still did not work.
- BDDL: (h) bugfix: ElementCollection key column had a comma too much for Map type

1.7.5:
- BON: (a) improvement: allow use of generics for return class definition
- BON: (b) improvement: support the @Deprecated annotation for enums
- BON: (b) extension: support of the XEnum data type (only grammar part, no serialization yet)
- BON: (b) improvement: issue warnings in BON editor if deprecated items are referenced
- BON: (b) improvement: issue errors in BON editor if enum tokens or IDs are used twice
- BON: (b) improvement: issue errors in BON editor if enum IDs or tokens exceed the maximum length of 63 characters
- BON: (c) improvement: meta information restructure, use Lists instead of arrays, add meta data for enums and xenums
- BON: (d) bugfix: check XEnum for cyclic inheritance. Allow the "class MyClass<E extends MyClass<E>>" construction 


- BON: (e) xenum almost working. Still Missing: serializable (uuid & test), externalizable

1.7.6:

1.7.7:
- BON: (a) improvement: supply MANIFEST.MF for some projects
- BON: (a) supply field name for arrays (required for Json output)
- BDDL: (b) allow to specify entity listeners per entity instead of per category only
- BDDL: (c) bugfix: fix tablespace category for history tables
- BON: (c) bugfix: don't create convenience setters for xenums on collections, due to type erasure, this does not compile.
- BON: (c) bugfix: allow enums with just 1 element, because this could make sense if they are used for xenums

1.7.8:
- BDDL: (a) improvement: add more plausi checks concerning history table name lengths
- BON & BDDL: (a) new feature: configuration screens which allow to specify validations and output via Eclipse preferences, enviroment variables or system properties

1.7.9:
- BON: (a): generate treeWalkBigDecimal for scaling postwork

1.7.10:
- BDDL: (a) bugfix elementCollections

1.7.11:
- BON: (a) new feature: allow circular dependencies (IMPORTANT: changes serialization format slightly)
- BON: reintroduce different token OBJECT_TERMINATOR again, different from PARENT_SEPARATOR, to allow easier skipping of objects (improves compatibility for extended classes)

1.7.12:
- Xtext / Xtend: switch to 2.6.0 final release


1.8.0:
- all: switch to Java 1.8



2.0.0:
- DSL: allow to generate for joda time or Java 8
- start Hazelcast support: create static inner enum class for factory, add Id & factoryId
- performance: check if performance gain by using factory class instead of reflection

2.1.0:
- BON: improvement: perform validity check for referenced Java annotations and interfaces
- BDDL: improvement: perform validity check for referenced Java annotations and interfaces
- BDDL: new option @Generator(doMapper) to override noMapper at package level
- BDDL: new property simpleref to allow mapping in set$Data / get$Data for simple ref cases

2.2.0:
- new method in BonaPortableClass to return the class of the corresponding BonaPortable
- BON / BDDL: remove support for Calendar
- New data type LocalTime
- back to Java 1.7 for compatibility
- improve value converter for escaping of qualified IDs

2.2.1:
- New data type Instant
- caching for hashCode() if the object has been frozen or is immutable
- empty instances of different classes have a different hashCode

2.2.2:
- undo entityListener JVM validation in BDDL (more hassle than benefit)
- fix FT-1178
- fix FT-953
- BDDL: add new property "compact" (option to serializable or Object fields) which selects the compact serialization strategy
- add new fast & compact binary serializer (CompactByteArrayParser / CompactByteArrayComposer)
  Goals:  fast, compact, portable, upgradeable (binary format)
   (distinguish length encoded fields and implicit length fields)
- improve value converter for escaping of qualified IDs also for BDDL
- BDDL: autogenerate history triggers (for Oracle databases)
- new option: suppress JAXB annotation generation (for Android builds)
- Final 2.2.2 released on 2014-07-29

2.2.3:
- generate XmlAdapters for xenum classes
- allow serializing xenums via readResolve / writeReplace
- Final 2.2.3 released on 2014-08-03

2.3.0:
*** NOT COMPATIBLE WITH EARLIER VERSIONS for Number(n) or fixed width formats!!! *** (but easily convertible)
- MessageParser interface now similar to MessageComposer (i.e. uses meta data reference instead of specialized parameters)
- change datatypes number(n) / Number(n) to map to BigInteger (up to 1 million digits) (38 if persisting to Oracle database)
- support limit to specific number of digits as well as implicit scale for integral data types byte, short, int, long and their wrapped equivalents
- implicit fractional digits supported for XML, CSV, fixed width, Android composer / parsers
- new data type BigInteger (see first topic)
- Final 2.3.0 released on 2014-08-11

2.3.1:
- bugfix release
- Final 2.3.1 released on 2014-08-11

2.3.2:
- BON: new feature: add customValidator attribute
- updated documentation (in bonaparte-java)
- improved error messages for time / date parsing errors
- added record type ID to data type maps to allow "readRecord()" method for CSV / fixed width parsers
- compact format: allow upgrading of int to float or double. Store integral float / doubles as integers, resulting in a more compact storage

2.3.3:
- BDDL: bugfix Oracle Trigger creation. Generated triggers now have _tr suffix instead of _trg in order to shorten names to max. 30 characters
- BON: rename customValidator token to customAddons, rename validate to preprocess, rename validateAfter to validate

2.3.4:
- BDDL: bugfix Oracle Trigger creation. Support numeric types for update condition.

2.3.5:
- BON: bugfix: for abstract classes, JAXB imports were missing
- BON: bugfix: generic parameters without lower bounds should generate "extends BonaPortable" in Java
- persistence-java: upgrade EclipseLink to 2.5.2
- BDDL: new feature: actualData setting for history categories: then SYSDATE / USER will be written instead of predefined data

2.3.6:
 bugfix release

2.3.8:
 switch to Xtend 2.7.x


2.4.0 (temporary development branch, no release built):
- dependency updates: Joda-Time to 2.4, guava to 18.0, jaxb removed (is part of JDK)
- BON: experimental feature: external types (working via adapter): first part, supporting only static adapters which map to a single field (no enhancement of MessageParser / MessageComposer)
- BON: fix: copy bon files to JARs, remove src/main/resources where not required.

2.4.1 (temporary development branch, no release built):
- custom types, part II: types which are replaced by different types (requires enhanced MessageParser / MessageComposer interfaces)
- move part of bonaparte-core into a separate repo (jpaw), with project jpaw-{base,util,enums}
- cleanup: remove MoneySetter / Getter, move Price with tax to example project
- cleanup: remove duplicate code in bonaparte-money{-test}, which is available in xtendsions. (And also did not really belong into bonaparte-money)
- upgraded tycho to 0.21

2.4.2 (temporary development branch, no release built):
- BDDL: new feature: target database MySQL (5.6.4 or better, for support of fractional seconds in temporal types) [experimental]
- BDSL: [new plugin]: Aerospike noSQL support (experimental)
- changes: classes which were moved to a different package (de.jpaw.util => de.jpaw.bonaparte.util)
  - DayTime
  - ToStringHelper
  - BigDecimalTools
  => switch to new major release due to incompatible change


3.0.0 (includes changes made in 2.4.x, changed to new major release to to backwards incompatible changes):
- general restructure, remove non-serialization/DSL specific code, move that into separate repo jpaw
- BON: allow arbitrary ordering of typedef, enum, xenum, classes (i.e. an xenum definition after a class definition)
- BDDL: allow to use BON packages inside a BDDL file
- BDSL: allow to use BON packages inside a BDDL file

3.0.1:
- BON: add enum Sets (as in Java EnumSet, but with the option to set / get the bitmap. Limited to 31 ordinals).
- BON: freeze() does not declare a checked exception an more.
       Need to replace plugins and Java libraries simultaneously for this reason (source compatible change, but not binary compatible)

3.1.0
- BDDL: switch to Hibernate 4.3.7.Final (requires Java EE 7 / JPA 2.1)
- BDDL: bugfix for hash / equals, for ByteArray fields. (major rewrite of equals code)
- BDDL: generate MS SQL server DDL by default
- BON: Add more methods to generated enums (PQON), also generate serialVersionUID for them
- BON: New types for TokenizableEnum in Composer (BonaTokenizableEnum), in order to be able to use get$PQON & friends here
- BON: move CSVStyle as a generated enum
- BON: bugfix for: "do not generate package-info.java unless there is Javadoc or XML annotations"

3.1.1:
- BDDL: automatically set all columns of natural keys to NOT NULL as well
- BON & BDDL: allow the use of a qualified ID a lot more (main exception are field name references, which are usually
        restricted to the current class)
- BDDL: new feature: allow property unroll with an explicit comma separated field list (for example
        unroll="net,tax1,tax2,tax3"). In this case, the underlying array does not need to have an explicit upper bound.
- BDDL: bugfix: do not use local variables w and p any more, only ones which start with an underscore, to avoid
        clashes with single character user fields.
- BON: revise the API for static adapters. Composers and Parsers are no longer passed into the converter, only an ExceptionConverter.
- BON: allow to supply external data to an adapter class (for example a currency used by multiple fields)
- BDDL: classes with adapters now work as embeddables (with and without externally supplied extra data)
- BON: add Class<?> field per adapter to meta data.
- BON: refine equals(). Clean up deprecated methods.
- BON: add some plausis that adapter classes must be declared "final". Remove static keyword. Instead auto-switch between member method and static method for marshal() depending on use of external adapter.
- BDDL: enumsets and xenumsets
- BON: apache poi upgraded from 3.10.1 to 3.11

3.2.0:
- BON & BDDL: internal reorg, to have separate data categories for enum/enumalpha and enumset/enumsetalpha
- BON & BDDL: better layout for preferences pages
- BON: incompatible change: required ';' at end of xenum definition, for grammar consistency
- BON: allow @Deprecated on field level
- BDDL: writing JPA 2.1 type converters for enums, xenums, enum sets, single field adapters

3.2.1:
- BON: provide some quick converter utility classes in bonaparte.util
- BDDL: support user types for BonaPortable for Eclipselink and JPA 2.1
- BDDL: fix the LocalTime user type implementation for Eclipselink
- BON & BDDL: type casts in preferences fixed
- BDDL: fix a bug related to serialized object columns when the compact format was selected
- BDDL: fix a bug: the validation class was not pulled, moved all validations from Java code to xtend now
- BDDL: add plausis on field name length for entities, not only for embeddables (is still not strict if loop unrolling is used!)

3.2.2:
- BON: 0x7f is no longer considered as a valid ASCII printable character, to be aligned with common interpretation.
       (Implicit change due to dependency upgrade to jpaw 1.2.1)
- BON: new parameter useFqn for adapters, to avoid importing the types, but rather reference the fully qualifies name
       every time (required for Java 8 date / time adapters, which share the simpleName with their Joda equivalents)
- updated tutorial to showcase enumsets
- new parser which obtains values via arbitrary getter, for use with vert.x or servlets (HttpRequestParameters)
- Java 8 date / time type adapters in companion project bonaparte8 (whch requires Java 8)

3.2.3:
- support for SAP HANA as database dialect
- add method to MessageComposer interface to allow outputting external classes "as is"
- remove class$pk static method. Fix BClass.INSTANCE.getPrimaryKey() to be transitive, i.e. return parent's pk where required.
- add plausi check that a pk cannot be changed in inherited classes.
- add @RelatedKey annotation to inherited classes as well
- marked several class and BonaPortable class related methods as deprecated, to cleanup / slimsize this portion.

3.2.4:
- removal of deprecated methods
- default factory is now 61. If a factoryId has been specified, additional plausi checks will be enabled.
- add enhanced interfaces for Hazelcast IdentifiedDataSerializable, Portable. Add collector methods.

3.2.5:
- complete Hazelcast support
- BON: generate meta$$this which describes a reference to the class itself, useful for compactComposers
- CompactComposers: Don't serialize -11, -12 and 61..63 as a single byte sequence, instead reserve these for future expansions or more frequently used shortcuts

3.3.0:
- add get$Active / set$Active to Bonaportable interface, for noSQL persistence layers operating directly on the DTO


ROADMAP / PLANS:
- make fields in immutable classes final, adjust constructors accordingly, omit deserializer and have empty treeWalk
- general use of nullWhenEmpty
- better plausis on field name length in case of Embeddables / loop unroll (field names are extended then)
- remove deprecated treewalk classes
- performance improvements LocalDate/Time serializers (really required?)
- separate validation from parsing (accept any length data, accept nulls everywhere (unless immutable collections!), no charset checks
- cache serialized forms for frozen or immutable objects?
- pk class with Generics?
- checked exceptions should be history. Inherit ApplicationException from RuntimeException, this significantly reduces boilerplate code, for example in the functional interfaces in bonaparte8-util.
- add httpURL parser / composer. (optional includes path prefix (pqon or part of it), or just parameters for provided class contents.
- the dynamic BonaPortable (metadata received via interface or initialization)



additional plausis:
- immutable / freezable classes: all fields must be private
- warn if optional fields used in collections (except Lists with precise length, and error in Set)


Known restrictions / limitations:
When using ElementCollection in conjunction with Embeddables, the names of the primary key columns of the ElementCollection must be identical
to the name of the primary key of the parent entity.

